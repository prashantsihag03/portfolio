{
  "compilerOptions": {
    "outDir": "dist",
    "target": "ES5",
    "lib": ["ES6", "DOM", "DOM.Iterable"],
    "allowJs": true,
    "skipLibCheck": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noFallthroughCasesInSwitch": true,
    
    "module": "CommonJS",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,

    /* 
      True would make room for another tool like Babel, or swc 
      to handle converting the TypeScript file to a file which 
      can run inside a JavaScript environment. 
    */
    "noEmit": false, 
    "jsx": "react",

    /*
      TODO: Check if this should be false in production.
      Enables the generation of sourcemap files. 
      These files allow debuggers and other tools to display 
      the original TypeScript source code when actually working 
      with the emitted JavaScript files. Source map files are emitted 
      as .js.map (or .jsx.map) files next to the corresponding .js output file.
    */
    "sourceMap": false,
    
    "noImplicitReturns": true,
    "noImplicitThis": true,
    "noImplicitAny": true,
    "strictNullChecks": true,
  },
  "include": [
    "src"
  ],
  "types": [
    "typePatches"
  ]
}